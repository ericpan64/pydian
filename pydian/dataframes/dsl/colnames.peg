# === Select DSL - 1. Column names ===

#  NOTE: Assume all whitespace is removed
colname_expr = (star / colname_list) filter_expr?

# === Actionable Units ===
colname_list = name_expr (comma name_expr)*

# === Intermediate Representation ===
filter_expr = colon lbrack expr rbrack
name_expr = (nested_name / name) arrow_op?
arrow_op = arrow lbrack name (comma name)* rbrack

# === Primitives ===
lbrack = "["
rbrack = "]"
comma = ","
colon = ":"
star = "*"
arrow = "->"
dot = "."

# === Lexemes ===
expr = ~"[^]]*"  # Match anything except closing bracket
nested_name = name (dot name_with_index)+  # One or more dot-separated names with optional indices
name_with_index = name array_index?  # Name with optional array index
array_index = lbrack ~"[0-9]+" rbrack  # Array index like [0]
name = ~"[a-zA-Z_][a-zA-Z0-9_]*"  # Allow alphanumeric and underscore
